import requests
import json
from shapely.geometry import Point
from shapely.geometry import Polygon
import matplotlib.pyplot as plt

def Address2LonLat(add_string):
    url = "https://restapi.amap.com/v3/geocode/geo"
    # form 表单
    params = {"key": "fd93bde9cbb20ec74a62efb0d9bbd9ea", "address": add_string}
    headers = {'Content-Type': 'application/x-www-form-urlencoded'}
    r = requests.get(url, params=params, headers=headers)
    response = json.loads(r.text)
    return response['geocodes'][0]['location']


names = []
add_strings = []
lonlats = []

filename = '/Users/liuyonglin/Desktop/毕业设计/address111.csv'
with open(filename, encoding="gb2312") as csvfile:
    csvfile.readline()
    for line in csvfile:
        name = line.strip().split(",")[0]
        names.append(name)
        add_string = line.strip().split(",")[1]
        add_strings.append(add_string)
        lonlat = Address2LonLat(add_string)
        lonlats.append(lonlat)

with open(filename + "_withlonlat.csv", "w", encoding="gb2312") as csvfile2:
    i = 0
    for name in names:
        csvfile2.write(name + "," + add_strings[i] + "," + lonlats[i] + "\r\n")

pointsString = "112.918723,27.894081;112.92004,27.893591;112.92008,27.893579;112.920123,27.893581;112.920278,27.893621;112.920321,27.893624;112.920453,27.8936;112.920485,27.893586;112.920501,27.893567;112.920506,27.892951;112.920522,27.892913;112.920557,27.892896;112.920614,27.892891;112.924672,27.893235;112.924736,27.893247;112.924771,27.893259;112.92527,27.893579;112.925305,27.893624;112.925554,27.894321;112.925554,27.894359;112.92553,27.894382;112.925326,27.894579;112.92531,27.89461;112.925305,27.89465;112.925366,27.894809;112.925361,27.894847;112.925128,27.895046;112.925104,27.895053;112.925066,27.895053;112.924618,27.895056;112.924575,27.895067;112.924559,27.895091;112.924441,27.895722;112.92442,27.895753;112.924369,27.895757;112.923301,27.895757;112.923234,27.895779;112.923215,27.895805;112.923205,27.895847;112.923202,27.896751;112.923215,27.896784;112.923242,27.8968;112.923556,27.896874;112.923596,27.896886;112.923827,27.897011;112.923883,27.89703;112.92395,27.89704;112.924406,27.896985;112.9245,27.896983;112.924876,27.897037;112.925189,27.897139;112.925248,27.897175;112.925696,27.897663;112.925737,27.897722;112.925785,27.898047;112.925774,27.898099;112.925755,27.898137;112.925466,27.898258;112.92512,27.898491;112.925069,27.898555;112.924975,27.89909;112.924986,27.899131;112.925012,27.899168;112.925383,27.899534;112.92542,27.899598;112.925444,27.899692;112.925447,27.899763;112.925423,27.89988;112.92538,27.899939;112.925286,27.900046;112.925262,27.900086;112.925243,27.900121;112.92523,27.900588;112.925243,27.900619;112.925291,27.900636;112.925501,27.900645;112.925541,27.900662;112.925565,27.90069;112.925576,27.900726;112.925592,27.902414;112.925581,27.902437;112.925557,27.902454;112.925334,27.902556;112.925315,27.902561;112.925291,27.902558;112.925189,27.902463;112.925147,27.902466;112.925117,27.902468;112.925063,27.902487;112.924814,27.902814;112.924809,27.902888;112.924827,27.902945;112.925487,27.903694;112.925729,27.903886;112.925782,27.903907;112.925828,27.903909;112.926281,27.903928;112.926301,27.903934;112.926317,27.903947;112.926327,27.903967;112.926421,27.904479;112.926418,27.904505;112.926219,27.905157;112.926199,27.905176;112.926107,27.905212;112.926085,27.905227;112.925963,27.905508;112.925953,27.90552;112.925937,27.905533;112.925911,27.905541;112.92444,27.905519;112.923368,27.905517;112.923343,27.905523;112.923312,27.905543;112.922515,27.906334;112.922493,27.906372;112.92192,27.907263;112.919898,27.910777;112.919865,27.91081;112.919833,27.910825;112.919796,27.910839;112.918331,27.910834;112.91831,27.910841;112.918299,27.910858;112.918205,27.910976;112.918154,27.911;112.918125,27.911;112.917891,27.910983;112.917854,27.910993;112.917816,27.911017;112.917068,27.912159;112.916824,27.912486;112.916714,27.912574;112.916588,27.91265;112.916502,27.91269;112.916408,27.912716;112.916336,27.912737;112.916215,27.912749;112.916124,27.912754;112.915968,27.912749;112.915831,27.91274;112.915649,27.912716;112.915518,27.912685;112.915172,27.912507;112.915099,27.912498;112.915035,27.9125;112.914986,27.912507;112.914469,27.912638;112.914391,27.912647;112.914308,27.912647;112.913742,27.912562;112.913661,27.912559;112.913594,27.912564;112.913149,27.912676;112.913069,27.912697;112.912988,27.912704;112.912296,27.912733;112.91221,27.912747;112.912141,27.912778;112.91191,27.91292;112.911859,27.912932;112.911779,27.912936;112.911679,27.912932;112.909981,27.91269;112.909925,27.912666;112.909893,27.912628;112.90988,27.912588;112.90988,27.912555;112.909898,27.912512;112.910362,27.911915;112.910376,27.911886;112.910376,27.911856;112.910373,27.911735;112.910381,27.911692;112.910405,27.911637;112.911746,27.90963;112.911765,27.909597;112.911765,27.909575;112.91176,27.909547;112.911736,27.909521;112.910853,27.908966;112.910802,27.908928;112.910558,27.908649;112.910531,27.908597;112.910502,27.908535;112.910491,27.908478;112.910464,27.908405;112.910352,27.908224;112.910325,27.908208;112.91029,27.908205;112.910247,27.90821;112.909512,27.908547;112.909426,27.908556;112.908766,27.908625;112.908699,27.908623;112.908648,27.908597;112.908455,27.908348;112.908141,27.908101;112.90812,27.908068;112.908104,27.90803;112.907999,27.907741;112.907999,27.90771;112.908015,27.907684;112.908031,27.907667;112.908812,27.907115;112.908866,27.907051;112.908901,27.906994;112.909201,27.906451;112.909193,27.906416;112.909171,27.906385;112.909147,27.906376;112.908691,27.906115;112.908673,27.906089;112.908678,27.906051;112.908705,27.906022;112.909536,27.905366;112.909579,27.905325;112.909601,27.905295;112.909619,27.905247;112.909947,27.904318;112.910252,27.903515;112.910293,27.90347;112.910338,27.903441;112.910419,27.903396;112.910496,27.903358;112.91059,27.903342;112.910655,27.903334;112.911188,27.903327;112.911237,27.903334;112.911261,27.903344;112.91217,27.904159;112.912208,27.904174;112.912264,27.904176;112.912307,27.904166;112.913289,27.903849;112.913337,27.903816;112.913369,27.903782;112.913702,27.903534;112.913755,27.903507;112.913809,27.903498;112.914862,27.903545;112.91491,27.903555;112.914943,27.903574;112.915053,27.903733;112.915079,27.903759;112.915104,27.903771;112.915138,27.903785;112.915906,27.904017;112.91593,27.904027;112.915943,27.904043;112.915946,27.90406;112.915951,27.904223;112.91597,27.904247;112.915991,27.904254;112.916018,27.904266;112.917035,27.904427;112.917078,27.904434;112.917121,27.904437;112.91718,27.904415;112.917909,27.90397;112.917998,27.903899;112.918051,27.903839;112.918811,27.902966;112.918811,27.90293;112.91879,27.902887;112.918771,27.902861;112.917358,27.902034;112.917342,27.902008;112.917333,27.90198;112.917355,27.901942;112.917543,27.901302;112.917567,27.901259;112.917602,27.901216;112.917663,27.901183;112.917741,27.901145;112.917798,27.901105;112.917819,27.901076;112.918085,27.900735;112.918106,27.900688;112.918114,27.900652;112.918117,27.900612;112.918117,27.900581;112.918109,27.900541;112.91787,27.900282;112.917848,27.900235;112.917848,27.900171;112.917857,27.900114;112.917878,27.900055;112.917916,27.900007;112.917961,27.899965;112.918554,27.8996;112.918591,27.899588;112.918648,27.899585;112.918873,27.899604;112.918951,27.8996;112.919031,27.899569;112.919329,27.899434;112.919369,27.89937;112.919388,27.899308;112.919399,27.89922;112.919383,27.899137;112.919351,27.899085;112.919262,27.898903;112.919262,27.898865;112.919275,27.898834;112.919565,27.89863;112.919605,27.898621;112.92085,27.898663;112.920895,27.898656;112.920925,27.898649;112.920944,27.89863;112.920957,27.898369;112.920933,27.898296;112.920669,27.897681;112.920641,27.897656;112.920603,27.897644;112.92015,27.89749;112.920088,27.897445;112.92004,27.897395;112.919984,27.897317;112.919828,27.896869;112.91967,27.896198;112.919643,27.89612;112.918683,27.894245;112.918667,27.89419;112.918667,27.894152;112.918677,27.894117;112.918723,27.894081"
pointsSplit = pointsString.split(";")
coords = []
for point in pointsSplit:
    X = point.split(",")[0]
    Y = point.split(",")[1]
    pointXY = Point(float(X), float(Y))
    coords.append(pointXY)
poly = Polygon(coords)
buffer = poly.buffer(2.0)
print(poly.area)
x1,y1=poly.exterior.xy
x2,y2=buffer.boundary.xy
plt.plot(x1,y1)
# plt.plot(buffer.boundary.xy)
plt.show()